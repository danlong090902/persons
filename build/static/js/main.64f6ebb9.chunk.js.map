{"version":3,"sources":["components/Note.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","content","onClick","axios","get","newObject","post","id","put","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","useEffect","noteService","then","response","data","console","log","length","notesToShow","filter","map","key","find","n","changedNote","Number","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"6LAceA,EAXF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UACf,qBAAuB,iBAC3B,OACE,4BAAKH,EAAKI,QACR,4BAAQC,QAASJ,GAAmBC,K,gBCS3B,EAZA,WACb,OAAOI,IAAMC,IALC,eAgBD,EARA,SAAAC,GACb,OAAOF,IAAMG,KATC,aASaD,IAOd,EAJA,SAACE,EAAIF,GAClB,OAAOF,IAAMK,IAAN,UAbO,aAaP,YAAwBD,GAAMF,ICmExBI,EA5EH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,IAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,KAKhBC,qBAAU,WACRC,IAEGC,MAAK,SAAAC,GACJR,EAASQ,EAASC,WAErB,IACHC,QAAQC,IAAI,SAAUZ,EAAMa,OAAQ,SAEpC,IAkCMC,EAAcV,EAChBJ,EACAA,EAAMe,QAAO,SAAA7B,GAAI,OAAuB,IAAnBA,EAAKG,aAI9B,OACE,6BACE,qCACA,6BACE,4BAAQE,QAAS,kBAAMc,GAAYD,KAAnC,QACQA,EAAU,YAAc,QAGlC,4BACGU,EAAYE,KAAI,SAAC9B,GAAD,OACf,kBAAC,EAAD,CAAM+B,IAAK/B,EAAKU,GAAIV,KAAMA,EAAMC,iBAAkB,kBAlD/B,SAAAS,GAEzB,IAAMV,EAAOc,EAAMkB,MAAK,SAAAC,GAAC,OAAIA,EAAEvB,KAAOA,KAChCwB,EAAW,2BAAQlC,GAAR,IAAcG,WAAYH,EAAKG,YAChDkB,EACUX,EAAIwB,GACXZ,MAAK,SAAAC,GACJE,QAAQC,IAAIH,EAASC,MACrBC,QAAQC,IAAIZ,EAAMgB,KAAI,SAAA9B,GAAI,OAAIA,EAAKU,KAAOyB,OAAOzB,GAAMV,EAAOuB,EAASC,SACvET,EAASD,EAAMgB,KAAI,SAAA9B,GAAI,OAAIA,EAAKU,KAAOA,EAAKV,EAAOuB,EAASC,YAyCFY,CAAmBpC,EAAKU,WAIpF,0BAAM2B,SAzCM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBpC,QAASY,EACTyB,MAAM,IAAIC,MAAOC,cACjBxC,UAAWyC,KAAKC,SAAW,IAG7BxB,EACUmB,GACPlB,MAAK,SAAAC,GACJE,QAAQC,IAAIH,GACZR,EAASD,EAAMgC,OAAOvB,EAASC,OAC/BP,EAAW,SA6BX,2BAAO8B,MAAO/B,EAASgC,SA1BJ,SAACV,GACxBb,QAAQC,IAAIY,EAAMW,OAAOF,OACzB9B,EAAWqB,EAAMW,OAAOF,UAyBpB,4BAAQG,KAAK,UAAb,WCrERC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.64f6ebb9.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n  const label = note.important\r\n    ? 'make not important' : 'make important'\r\n  return (\r\n    <li>{note.content}\r\n      <button onClick={toggleImportance}>{label}</button>\r\n    </li>\r\n\r\n  )\r\n}\r\n\r\nexport default Note","import axios from 'axios'\r\nconst baseUrl = '/api/notes'\r\n\r\n// const baseUrl = 'http://localhost:3001/api/notes'\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl)\r\n}\r\n\r\nconst create = newObject => {\r\n  return axios.post(baseUrl, newObject)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  return axios.put(`${baseUrl}/${id}`, newObject)\r\n}\r\n\r\nexport default {\r\n  getAll: getAll,\r\n  create: create,\r\n  update: update\r\n}","import React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport noteService from './services/notes'\n\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(response => {\n        setNotes(response.data)\n      })\n  }, [])\n  console.log('render', notes.length, 'notes')\n\n  const toggleImportanceOf = id => {\n\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n    noteService\n      .update(id, changedNote)\n      .then(response => {\n        console.log(response.data)\n        console.log(notes.map(note => note.id !== Number(id) ? note : response.data))\n        setNotes(notes.map(note => note.id !== id ? note : response.data))\n      })\n  }\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5\n    }\n\n    noteService\n      .create(noteObject)\n      .then(response => {\n        console.log(response)\n        setNotes(notes.concat(response.data))\n        setNewNote('')\n      })\n  }\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important === true)\n\n\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note) =>\n          <Note key={note.id} note={note} toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">save</button>\n      </form>\n    </div>\n  )\n}\n\nexport default App;\n","import ReactDOM from 'react-dom'\nimport React from 'react'\nimport App from './App'\n\n\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}